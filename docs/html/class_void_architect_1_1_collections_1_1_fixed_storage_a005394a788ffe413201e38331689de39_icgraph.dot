digraph "VoidArchitect::Collections::FixedStorage::GetUsedSlots"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="RL";
  Node1 [id="Node000001",label="VoidArchitect::Collections\l::FixedStorage::GetUsedSlots",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Get the number of currently allocated slots."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="VoidArchitect::Collections\l::FixedStorage::Allocate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a9f4828c0199ff0cd6a2f08f7622e3e78",tooltip="Allocate a new slot and construct object in-place."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="TestBasicOperations",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_tests_8cpp.html#a3b37debd5d1b3db3bf6fd537398b310f",tooltip="Test basic allocation and access."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="RunAllTests",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_tests_8cpp.html#ae0ca194f6b730e168850ce3179ad4f63",tooltip="Run all validation tests."];
  Node2 -> Node5 [id="edge4_Node000002_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="TestCapacityLimits",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_tests_8cpp.html#ac03aec7c41cf6ac2237ffe28a14935dc",tooltip="Test capacity limits."];
  Node5 -> Node4 [id="edge5_Node000005_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node6 [id="edge6_Node000002_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="TestFixedStorageBasics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#a1990d785967c245a0c198ad78a50f427",tooltip="Test basic FixedStorage operations."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="VA_REGISTER_TEST",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#a3fe705e9f8c2babdc06f57260eedac86",tooltip=" "];
  Node2 -> Node8 [id="edge8_Node000002_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="TestFixedStorageCapacity",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#af033ce9be69338956f41c5c5ac0c8f7d",tooltip="Test capacity limits and overflow handling."];
  Node8 -> Node9 [id="edge9_Node000008_Node000009",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="VA_REGISTER_TEST",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#aa1fceb57964f3b27934ab182e2c810df",tooltip=" "];
  Node2 -> Node10 [id="edge10_Node000002_Node000010",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="TestFixedStorageGenerations",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#a925360b2e40a579b247d321db7d07941",tooltip="Test handle generation and ABA prevention."];
  Node10 -> Node11 [id="edge11_Node000010_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="VA_REGISTER_TEST",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#ad9be0a5b946da2aa81b697961b973038",tooltip=" "];
  Node2 -> Node12 [id="edge12_Node000002_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="TestFixedStorageThreadSafety",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#a0b00e579555b55a9635f62cd07b8308f",tooltip="Test thread safety with concurrent operations."];
  Node12 -> Node13 [id="edge13_Node000012_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="VA_REGISTER_TEST",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#aa3327ea267c9ffa895c160f916c0cefc",tooltip=" "];
  Node2 -> Node14 [id="edge14_Node000002_Node000014",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node14 [id="Node000014",label="TestHandleGeneration",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_tests_8cpp.html#af3d3ae72d181366ff0cca7dc27106d7f",tooltip="Test handle generation and ABA prevention."];
  Node14 -> Node4 [id="edge15_Node000014_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node15 [id="edge16_Node000002_Node000015",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node15 [id="Node000015",label="TestMultipleSlots",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_tests_8cpp.html#a82a2fbc0598de9a6ca78f276c49e8d24",tooltip="Test multiple slot allocation and generation tracking."];
  Node15 -> Node4 [id="edge17_Node000015_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node16 [id="edge18_Node000002_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="TestThreadSafety",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_tests_8cpp.html#ae1041a05860256d48f5056e22e14cc95",tooltip="Test thread safety with concurrent allocations."];
  Node16 -> Node4 [id="edge19_Node000016_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node17 [id="edge20_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="VoidArchitect::Collections\l::FixedStorage::GetAvailableSlots",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#afe2778e3d3166561b21a248eb83e2491",tooltip="Get the number of available slots."];
  Node17 -> Node3 [id="edge21_Node000017_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 -> Node6 [id="edge22_Node000017_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node18 [id="edge23_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="VoidArchitect::Collections\l::FixedStorage::GetUsagePercentage",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#aae6b2bbecc1595624d161e55530f7e18",tooltip="Get usage percentage."];
  Node1 -> Node19 [id="edge24_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="VoidArchitect::Collections\l::FixedStorage::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a4d9fc57bd15e68354859c2c6340daf17",tooltip="Check if storage is empty."];
  Node19 -> Node3 [id="edge25_Node000019_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 -> Node6 [id="edge26_Node000019_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node20 [id="edge27_Node000001_Node000020",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 [id="Node000020",label="VoidArchitect::Collections\l::FixedStorage::IsFull",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#ac2f47d1561f36176b4c0e52e864a9d0e",tooltip="Check if storage is full."];
  Node20 -> Node3 [id="edge28_Node000020_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node5 [id="edge29_Node000020_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node6 [id="edge30_Node000020_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node20 -> Node8 [id="edge31_Node000020_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node3 [id="edge32_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node5 [id="edge33_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge34_Node000001_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node8 [id="edge35_Node000001_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node12 [id="edge36_Node000001_Node000012",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node16 [id="edge37_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
}
