digraph "VA_REGISTER_TEST"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="VA_REGISTER_TEST",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="TestFixedStorageBasics",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$_fixed_storage_tests_8cpp.html#a1990d785967c245a0c198ad78a50f427",tooltip="Test basic FixedStorage operations."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="VoidArchitect::Collections\l::FixedStorage::Allocate",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a9f4828c0199ff0cd6a2f08f7622e3e78",tooltip="Allocate a new slot and construct object in-place."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="VoidArchitect::Collections\l::FixedStorage::GetUsedSlots",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a005394a788ffe413201e38331689de39",tooltip="Get the number of currently allocated slots."];
  Node3 -> Node5 [id="edge4_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="VoidArchitect::Handle\l::Invalid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$struct_void_architect_1_1_handle.html#a791780bb18d11208b419903a9086b937",tooltip="Create an explicitly invalid handle."];
  Node2 -> Node6 [id="edge5_Node000002_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="VoidArchitect::Collections\l::FixedStorage::Get",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a721d4fae44f875c5946058de2effd441",tooltip="Get mutable object by handle."];
  Node2 -> Node7 [id="edge6_Node000002_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="VoidArchitect::Collections\l::FixedStorage::GetAvailableSlots",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#afe2778e3d3166561b21a248eb83e2491",tooltip="Get the number of available slots."];
  Node7 -> Node4 [id="edge7_Node000007_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node4 [id="edge8_Node000002_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node8 [id="edge9_Node000002_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="VoidArchitect::Collections\l::FixedStorage::IsEmpty",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a4d9fc57bd15e68354859c2c6340daf17",tooltip="Check if storage is empty."];
  Node8 -> Node4 [id="edge10_Node000008_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node9 [id="edge11_Node000002_Node000009",color="steelblue1",style="solid",tooltip=" "];
  Node9 [id="Node000009",label="VoidArchitect::Collections\l::FixedStorage::IsFull",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#ac2f47d1561f36176b4c0e52e864a9d0e",tooltip="Check if storage is full."];
  Node9 -> Node4 [id="edge12_Node000009_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node2 -> Node10 [id="edge13_Node000002_Node000010",color="steelblue1",style="solid",tooltip=" "];
  Node10 [id="Node000010",label="VoidArchitect::Collections\l::FixedStorage::IsValid",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#ad0eee9c51c6341c404d860cc841ec73b",tooltip="Check if handle references a valid object."];
  Node2 -> Node11 [id="edge14_Node000002_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="VoidArchitect::Collections\l::FixedStorage::Release",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$class_void_architect_1_1_collections_1_1_fixed_storage.html#a135e8dbe28a28e611e9c292ca82be518",tooltip="Release a slot and destruct the object."];
}
